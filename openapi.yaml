components:
  schemas:
    CreateJobRequestBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/CreateJobRequestBody.json
          format: uri
          readOnly: true
          type: string
        jobType:
          description: The type of the job to create
          type: string
        payload:
          additionalProperties: {}
          description: The payload of the job
          type: object
        process:
          description: Whether the job will process the job immediately
          type: boolean
      required:
        - jobType
        - payload
        - process
      type: object
    CreateJobResponseBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/CreateJobResponseBody.json
          format: uri
          readOnly: true
          type: string
        job:
          $ref: "#/components/schemas/JobOutput"
          description: The created job
      required:
        - job
      type: object
    ErrorDetail:
      additionalProperties: false
      properties:
        location:
          description: Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'
          type: string
        message:
          description: Error message text
          type: string
        value:
          description: The value at the given location
      type: object
    ErrorModel:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/ErrorModel.json
          format: uri
          readOnly: true
          type: string
        detail:
          description: A human-readable explanation specific to this occurrence of the problem.
          example: Property foo is required but is missing.
          type: string
        errors:
          description: Optional list of individual error details
          items:
            $ref: "#/components/schemas/ErrorDetail"
          nullable: true
          type: array
        instance:
          description: A URI reference that identifies the specific occurrence of the problem.
          example: https://example.com/error-log/abc123
          format: uri
          type: string
        status:
          description: HTTP status code
          example: 400
          format: int64
          type: integer
        title:
          description: A short, human-readable summary of the problem type. This value should not change between occurrences of the error.
          example: Bad Request
          type: string
        type:
          default: about:blank
          description: A URI reference to human-readable documentation for the error.
          example: https://example.com/errors/example
          format: uri
          type: string
      type: object
    FinishJobRequestBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/FinishJobRequestBody.json
          format: uri
          readOnly: true
          type: string
        jobId:
          description: The ID of the job that was finished
          type: string
        message:
          description: The message of the job
          type: string
        result:
          additionalProperties: {}
          description: The result payload of the job
          type: object
        status:
          description: The new status of the job
          type: string
      required:
        - jobId
        - message
        - result
        - status
      type: object
    FinishJobResponseBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/FinishJobResponseBody.json
          format: uri
          readOnly: true
          type: string
        message:
          description: The message
          example: OK
          type: string
      required:
        - message
      type: object
    GetJobResponseBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/GetJobResponseBody.json
          format: uri
          readOnly: true
          type: string
        job:
          $ref: "#/components/schemas/JobOutput"
          description: The job
      required:
        - job
      type: object
    GetJobsResponseBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/GetJobsResponseBody.json
          format: uri
          readOnly: true
          type: string
        jobs:
          description: The jobs
          items:
            $ref: "#/components/schemas/JobOutput"
          nullable: true
          type: array
      required:
        - jobs
      type: object
    JobOutput:
      additionalProperties: false
      properties:
        createdAt:
          description: The creation time of the job
          type: string
        id:
          description: The ID of the job
          type: string
        jobType:
          description: The type of the job
          type: string
        outMessage:
          description: The message of the job
          type: string
        payload:
          description: The payload of the job
          type: string
        result:
          description: The result of the job
          type: string
        status:
          description: The status of the job
          type: string
      required:
        - id
        - jobType
        - status
        - payload
        - result
        - outMessage
        - createdAt
      type: object
    PingOutputBody:
      additionalProperties: false
      properties:
        $schema:
          description: A URL to the JSON Schema for this object.
          example: https://example.com/schemas/PingOutputBody.json
          format: uri
          readOnly: true
          type: string
        message:
          description: The message to return
          example: OK
          type: string
      required:
        - message
      type: object
info:
  title: My API
  version: 1.0.0
openapi: 3.0.3
paths:
  /api/v1/jobs:
    post:
      description: Create a job
      operationId: create-job
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateJobRequestBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateJobResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Create a job
      tags:
        - Jobs
  /api/v1/jobs/finish:
    post:
      description: Finish a job
      operationId: finish-job
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FinishJobRequestBody"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FinishJobResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Finish a job
      tags:
        - Jobs
  /api/v1/jobs/status/{status}:
    get:
      description: Get jobs
      operationId: get-jobs
      parameters:
        - description: The status of the jobs to get
          in: path
          name: status
          required: true
          schema:
            description: The status of the jobs to get
            enum:
              - pending
              - processing
              - completed
              - failed
              - cancelled
              - retrying
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetJobsResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Get jobs
      tags:
        - Jobs
  /api/v1/jobs/{id}:
    get:
      description: Get a job by ID
      operationId: get-job
      parameters:
        - description: The ID of the job to get
          in: path
          name: id
          required: true
          schema:
            description: The ID of the job to get
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetJobResponseBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Get a job
      tags:
        - Jobs
  /api/v1/ping:
    get:
      description: Health check endpoint
      operationId: get-ping
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PingOutputBody"
          description: OK
        default:
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ErrorModel"
          description: Error
      summary: Health check endpoint
      tags:
        - Health
